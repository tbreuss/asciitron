Opal.modules["corelib/comparable"]=function(Opal){Opal.dynamic_require_severity="warning";function $rb_gt(lhs,rhs){return typeof lhs==="number"&&typeof rhs==="number"?lhs>rhs:lhs["$>"](rhs)}function $rb_lt(lhs,rhs){return typeof lhs==="number"&&typeof rhs==="number"?lhs<rhs:lhs["$<"](rhs)}var self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$module=Opal.module;Opal.add_stubs(["$===","$equal?","$<=>","$normalize","$raise","$class"]);return function($base){var self=$module($base,"Comparable");var def=self.$$proto,$scope=self.$$scope;Opal.defs(self,"$normalize",function(what){var $a,self=this;if(($a=$scope.get("Integer")["$==="](what))!==nil&&(!$a.$$is_boolean||$a==true)){return what}if($rb_gt(what,0)){return 1}if($rb_lt(what,0)){return-1}return 0});Opal.defn(self,"$==",function(other){var $a,self=this,cmp=nil;try{if(($a=self["$equal?"](other))!==nil&&(!$a.$$is_boolean||$a==true)){return true}if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{return false}return $scope.get("Comparable").$normalize(cmp)==0}catch($err){if(Opal.rescue($err,[$scope.get("StandardError")])){return false}else{throw $err}}});Opal.defn(self,"$>",function(other){var $a,self=this,cmp=nil;if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed")}return $scope.get("Comparable").$normalize(cmp)>0});Opal.defn(self,"$>=",function(other){var $a,self=this,cmp=nil;if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed")}return $scope.get("Comparable").$normalize(cmp)>=0});Opal.defn(self,"$<",function(other){var $a,self=this,cmp=nil;if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed")}return $scope.get("Comparable").$normalize(cmp)<0});Opal.defn(self,"$<=",function(other){var $a,self=this,cmp=nil;if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed")}return $scope.get("Comparable").$normalize(cmp)<=0});Opal.defn(self,"$between?",function(min,max){var self=this;if($rb_lt(self,min)){return false}if($rb_gt(self,max)){return false}return true})}(self)};Opal.modules["corelib/string"]=function(Opal){Opal.dynamic_require_severity="warning";function $rb_divide(lhs,rhs){return typeof lhs==="number"&&typeof rhs==="number"?lhs/rhs:lhs["$/"](rhs)}function $rb_plus(lhs,rhs){return typeof lhs==="number"&&typeof rhs==="number"?lhs+rhs:lhs["$+"](rhs)}var self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$klass=Opal.klass,$gvars=Opal.gvars;Opal.add_stubs(["$require","$include","$coerce_to?","$coerce_to","$raise","$===","$format","$to_s","$respond_to?","$to_str","$<=>","$==","$=~","$new","$empty?","$ljust","$ceil","$rjust","$floor","$to_a","$each_char","$to_proc","$coerce_to!","$initialize_clone","$initialize_dup","$enum_for","$chomp","$[]","$to_i","$class","$each_line","$match","$captures","$proc","$shift","$__send__","$succ","$escape"]);self.$require("corelib/comparable");(function($base,$super){function $String(){}var self=$String=$klass($base,$super,"String",$String);var def=self.$$proto,$scope=self.$$scope,TMP_1,TMP_2,TMP_3,TMP_4,TMP_5,TMP_6,TMP_7,TMP_8,TMP_10;def.length=nil;self.$include($scope.get("Comparable"));def.$$is_string=true;def.$__id__=function(){var self=this;return self.toString()};Opal.defn(self,"$object_id",def.$__id__);Opal.defs(self,"$try_convert",function(what){var self=this;return $scope.get("Opal")["$coerce_to?"](what,$scope.get("String"),"to_str")});Opal.defs(self,"$new",function(str){var self=this;if(str==null){str=""}str=$scope.get("Opal").$coerce_to(str,$scope.get("String"),"to_str");return new String(str)});def.$initialize=function(str){var self=this;if(str===undefined){return self}return self.$raise($scope.get("NotImplementedError"),"Mutable strings are not supported in Opal.")};def["$%"]=function(data){var $a,self=this;if(($a=$scope.get("Array")["$==="](data))!==nil&&(!$a.$$is_boolean||$a==true)){return($a=self).$format.apply($a,[self].concat(data))}else{return self.$format(self,data)}};def["$*"]=function(count){var self=this;count=$scope.get("Opal").$coerce_to(count,$scope.get("Integer"),"to_int");if(count<0){self.$raise($scope.get("ArgumentError"),"negative argument")}if(count===0){return""}var result="",string=self.toString();if(string.length*count>=1<<28){self.$raise($scope.get("RangeError"),"multiply count must not overflow maximum string size")}for(;;){if((count&1)===1){result+=string}count>>>=1;if(count===0){break}string+=string}return result};def["$+"]=function(other){var self=this;other=$scope.get("Opal").$coerce_to(other,$scope.get("String"),"to_str");return self+other.$to_s()};def["$<=>"]=function(other){var $a,self=this;if(($a=other["$respond_to?"]("to_str"))!==nil&&(!$a.$$is_boolean||$a==true)){other=other.$to_str().$to_s();return self>other?1:self<other?-1:0}else{var cmp=other["$<=>"](self);if(cmp===nil){return nil}else{return cmp>0?-1:cmp<0?1:0}}};def["$<<"]=function(other){var self=this;return self.$raise($scope.get("NotImplementedError"),"#<< not supported. Mutable String methods are not supported in Opal.")};def["$=="]=function(other){var self=this;if(other.$$is_string){return self.toString()===other.toString()}if($scope.get("Opal")["$respond_to?"](other,"to_str")){return other["$=="](self)}return false};Opal.defn(self,"$eql?",def["$=="]);Opal.defn(self,"$===",def["$=="]);def["$=~"]=function(other){var self=this;if(other.$$is_string){self.$raise($scope.get("TypeError"),"type mismatch: String given")}return other["$=~"](self)};def["$[]"]=function(index,length){var self=this;var size=self.length;if(index.$$is_range){var exclude=index.exclude,length=$scope.get("Opal").$coerce_to(index.end,$scope.get("Integer"),"to_int"),index=$scope.get("Opal").$coerce_to(index.begin,$scope.get("Integer"),"to_int");if(Math.abs(index)>size){return nil}if(index<0){index+=size}if(length<0){length+=size}if(!exclude){length+=1}length=length-index;if(length<0){length=0}return self.substr(index,length)}if(index.$$is_string){if(length!=null){self.$raise($scope.get("TypeError"))}return self.indexOf(index)!==-1?index:nil}if(index.$$is_regexp){var match=self.match(index);if(match===null){$gvars["~"]=nil;return nil}$gvars["~"]=$scope.get("MatchData").$new(index,match);if(length==null){return match[0]}length=$scope.get("Opal").$coerce_to(length,$scope.get("Integer"),"to_int");if(length<0&&-length<match.length){return match[length+=match.length]}if(length>=0&&length<match.length){return match[length]}return nil}index=$scope.get("Opal").$coerce_to(index,$scope.get("Integer"),"to_int");if(index<0){index+=size}if(length==null){if(index>=size||index<0){return nil}return self.substr(index,1)}length=$scope.get("Opal").$coerce_to(length,$scope.get("Integer"),"to_int");if(length<0){return nil}if(index>size||index<0){return nil}return self.substr(index,length)};def.$capitalize=function(){var self=this;return self.charAt(0).toUpperCase()+self.substr(1).toLowerCase()};Opal.defn(self,"$capitalize!",def["$<<"]);def.$casecmp=function(other){var self=this;other=$scope.get("Opal").$coerce_to(other,$scope.get("String"),"to_str").$to_s();var ascii_only=/^[\x00-\x7F]*$/;if(ascii_only.test(self)&&ascii_only.test(other)){self=self.toLowerCase();other=other.toLowerCase()}return self["$<=>"](other)};def.$center=function(width,padstr){var $a,self=this;if(padstr==null){padstr=" "}width=$scope.get("Opal").$coerce_to(width,$scope.get("Integer"),"to_int");padstr=$scope.get("Opal").$coerce_to(padstr,$scope.get("String"),"to_str").$to_s();if(($a=padstr["$empty?"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError"),"zero width padding")}if(($a=width<=self.length)!==nil&&(!$a.$$is_boolean||$a==true)){return self}var ljustified=self.$ljust($rb_divide($rb_plus(width,self.length),2).$ceil(),padstr),rjustified=self.$rjust($rb_divide($rb_plus(width,self.length),2).$floor(),padstr);return rjustified+ljustified.slice(self.length)};def.$chars=TMP_1=function(){var $a,$b,self=this,$iter=TMP_1.$$p,block=$iter||nil;TMP_1.$$p=null;if(block!==false&&block!==nil){}else{return self.$each_char().$to_a()}return($a=($b=self).$each_char,$a.$$p=block.$to_proc(),$a).call($b)};def.$chomp=function(separator){var $a,self=this;if($gvars["/"]==null)$gvars["/"]=nil;if(separator==null){separator=$gvars["/"]}if(($a=separator===nil||self.length===0)!==nil&&(!$a.$$is_boolean||$a==true)){return self}separator=$scope.get("Opal")["$coerce_to!"](separator,$scope.get("String"),"to_str").$to_s();if(separator==="\n"){return self.replace(/\r?\n?$/,"")}else if(separator===""){return self.replace(/(\r?\n)+$/,"")}else if(self.length>separator.length){var tail=self.substr(self.length-separator.length,separator.length);if(tail===separator){return self.substr(0,self.length-separator.length)}}return self};Opal.defn(self,"$chomp!",def["$<<"]);def.$chop=function(){var self=this;var length=self.length;if(length<=1){return""}if(self.charAt(length-1)==="\n"&&self.charAt(length-2)==="\r"){return self.substr(0,length-2)}else{return self.substr(0,length-1)}};Opal.defn(self,"$chop!",def["$<<"]);def.$chr=function(){var self=this;return self.charAt(0)};def.$clone=function(){var self=this,copy=nil;copy=self.slice();copy.$initialize_clone(self);return copy};def.$dup=function(){var self=this,copy=nil;copy=self.slice();copy.$initialize_dup(self);return copy};def.$count=function(sets){var self=this;sets=$slice.call(arguments,0);if(sets.length===0){self.$raise($scope.get("ArgumentError"),"ArgumentError: wrong number of arguments (0 for 1+)")}var char_class=char_class_from_char_sets(sets);if(char_class===null){return 0}return self.length-self.replace(new RegExp(char_class,"g"),"").length};def.$delete=function(sets){var self=this;sets=$slice.call(arguments,0);if(sets.length===0){self.$raise($scope.get("ArgumentError"),"ArgumentError: wrong number of arguments (0 for 1+)")}var char_class=char_class_from_char_sets(sets);if(char_class===null){return self}return self.replace(new RegExp(char_class,"g"),"")};Opal.defn(self,"$dup",def.$clone);def.$downcase=function(){var self=this;return self.toLowerCase()};Opal.defn(self,"$downcase!",def["$<<"]);def.$each_char=TMP_2=function(){var $a,self=this,$iter=TMP_2.$$p,block=$iter||nil;TMP_2.$$p=null;if(block!==nil){}else{return self.$enum_for("each_char")}for(var i=0,length=self.length;i<length;i++){($a=Opal.yield1(block,self.charAt(i)))===$breaker?$breaker.$v:$a}return self};def.$each_line=TMP_3=function(separator){var $a,self=this,$iter=TMP_3.$$p,$yield=$iter||nil;if($gvars["/"]==null)$gvars["/"]=nil;if(separator==null){separator=$gvars["/"]}TMP_3.$$p=null;if($yield!==nil){}else{return self.$enum_for("each_line",separator)}if(separator===nil){($a=Opal.yield1($yield,self))===$breaker?$breaker.$v:$a;return self}separator=$scope.get("Opal").$coerce_to(separator,$scope.get("String"),"to_str");if(separator.length===0){for(var a=self.split(/(\n{2,})/),i=0,n=a.length;i<n;i+=2){if(a[i]||a[i+1]){($a=Opal.yield1($yield,(a[i]||"")+(a[i+1]||"")))===$breaker?$breaker.$v:$a}}return self}var chomped=self.$chomp(separator),trailing=self.length!=chomped.length,splitted=chomped.split(separator);for(var i=0,length=splitted.length;i<length;i++){if(i<length-1||trailing){($a=Opal.yield1($yield,splitted[i]+separator))===$breaker?$breaker.$v:$a}else{($a=Opal.yield1($yield,splitted[i]))===$breaker?$breaker.$v:$a}}return self};def["$empty?"]=function(){var self=this;return self.length===0};def["$end_with?"]=function(suffixes){var self=this;suffixes=$slice.call(arguments,0);for(var i=0,length=suffixes.length;i<length;i++){var suffix=$scope.get("Opal").$coerce_to(suffixes[i],$scope.get("String"),"to_str").$to_s();if(self.length>=suffix.length&&self.substr(self.length-suffix.length,suffix.length)==suffix){return true}}return false};Opal.defn(self,"$eql?",def["$=="]);Opal.defn(self,"$equal?",def["$==="]);def.$gsub=TMP_4=function(pattern,replacement){var self=this,$iter=TMP_4.$$p,block=$iter||nil;TMP_4.$$p=null;var result="",match_data=nil,index=0,match,_replacement;if(pattern.$$is_regexp){pattern=new RegExp(pattern.source,"gm"+(pattern.ignoreCase?"i":""))}else{pattern=$scope.get("Opal").$coerce_to(pattern,$scope.get("String"),"to_str");pattern=new RegExp(pattern.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gm")}while(true){match=pattern.exec(self);if(match===null){$gvars["~"]=nil;result+=self.slice(index);break}match_data=$scope.get("MatchData").$new(pattern,match);if(replacement===undefined){if(block===nil){self.$raise($scope.get("ArgumentError"),"wrong number of arguments (1 for 2)")}_replacement=block(match[0])}else if(replacement.$$is_hash){_replacement=replacement["$[]"](match[0]).$to_s()}else{if(!replacement.$$is_string){replacement=$scope.get("Opal").$coerce_to(replacement,$scope.get("String"),"to_str")}_replacement=replacement.replace(/([\\]+)([0-9+&`'])/g,function(original,slashes,command){if(slashes.length%2===0){return original}switch(command){case"+":for(var i=match.length-1;i>0;i--){if(match[i]!==undefined){return slashes.slice(1)+match[i]}}return"";case"&":return slashes.slice(1)+match[0];case"`":return slashes.slice(1)+self.slice(0,match.index);case"'":return slashes.slice(1)+self.slice(match.index+match[0].length);default:return slashes.slice(1)+(match[command]||"")}}).replace(/\\\\/g,"\\")}if(pattern.lastIndex===match.index){result+=_replacement+self.slice(index,match.index+1);pattern.lastIndex+=1}else{result+=self.slice(index,match.index)+_replacement}index=pattern.lastIndex}$gvars["~"]=match_data;return result};Opal.defn(self,"$gsub!",def["$<<"]);def.$hash=function(){var self=this;return self.toString()};def.$hex=function(){var self=this;return self.$to_i(16)};def["$include?"]=function(other){var $a,self=this;if(other.$$is_string){return self.indexOf(other)!==-1}if(($a=other["$respond_to?"]("to_str"))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("TypeError"),"no implicit conversion of "+other.$class()+" into String")}return self.indexOf(other.$to_str())!==-1};def.$index=function(search,offset){var self=this;var index,match,regex;if(offset===undefined){offset=0}else{offset=$scope.get("Opal").$coerce_to(offset,$scope.get("Integer"),"to_int");if(offset<0){offset+=self.length;if(offset<0){return nil}}}if(search.$$is_regexp){regex=new RegExp(search.source,"gm"+(search.ignoreCase?"i":""));while(true){match=regex.exec(self);if(match===null){$gvars["~"]=nil;index=-1;break}if(match.index>=offset){$gvars["~"]=$scope.get("MatchData").$new(regex,match);index=match.index;break}regex.lastIndex=match.index+1}}else{search=$scope.get("Opal").$coerce_to(search,$scope.get("String"),"to_str");if(search.length===0&&offset>self.length){index=-1}else{index=self.indexOf(search,offset)}}return index===-1?nil:index};def.$inspect=function(){var self=this;var escapable=/[\\\"\x00-\x1f\x7f-\x9f\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,meta={"":"\\a","":"\\e","\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","":"\\v",'"':'\\"',"\\":"\\\\"},escaped=self.replace(escapable,function(chr){return meta[chr]||"\\u"+("0000"+chr.charCodeAt(0).toString(16).toUpperCase()).slice(-4)});return'"'+escaped.replace(/\#[\$\@\{]/g,"\\$&")+'"'};def.$intern=function(){var self=this;return self};def.$lines=TMP_5=function(separator){var $a,$b,self=this,$iter=TMP_5.$$p,block=$iter||nil,e=nil;if($gvars["/"]==null)$gvars["/"]=nil;if(separator==null){separator=$gvars["/"]}TMP_5.$$p=null;e=($a=($b=self).$each_line,$a.$$p=block.$to_proc(),$a).call($b,separator);if(block!==false&&block!==nil){return self}else{return e.$to_a()}};def.$length=function(){var self=this;return self.length};def.$ljust=function(width,padstr){var $a,self=this;if(padstr==null){padstr=" "}width=$scope.get("Opal").$coerce_to(width,$scope.get("Integer"),"to_int");padstr=$scope.get("Opal").$coerce_to(padstr,$scope.get("String"),"to_str").$to_s();if(($a=padstr["$empty?"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError"),"zero width padding")}if(($a=width<=self.length)!==nil&&(!$a.$$is_boolean||$a==true)){return self}var index=-1,result="";width-=self.length;while(++index<width){result+=padstr}return self+result.slice(0,width)};def.$lstrip=function(){var self=this;return self.replace(/^\s*/,"")};Opal.defn(self,"$lstrip!",def["$<<"]);def.$match=TMP_6=function(pattern,pos){var $a,$b,self=this,$iter=TMP_6.$$p,block=$iter||nil;TMP_6.$$p=null;if(($a=($b=$scope.get("String")["$==="](pattern))!==false&&$b!==nil?$b:pattern["$respond_to?"]("to_str"))!==nil&&(!$a.$$is_boolean||$a==true)){pattern=$scope.get("Regexp").$new(pattern.$to_str())}if(($a=$scope.get("Regexp")["$==="](pattern))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("TypeError"),"wrong argument type "+pattern.$class()+" (expected Regexp)")}return($a=($b=pattern).$match,$a.$$p=block.$to_proc(),$a).call($b,self,pos)};def.$next=function(){var self=this;var i=self.length;if(i===0){return""}var result=self;var first_alphanum_char_index=self.search(/[a-zA-Z0-9]/);var carry=false;var code;while(i--){code=self.charCodeAt(i);if(code>=48&&code<=57||code>=65&&code<=90||code>=97&&code<=122){switch(code){case 57:carry=true;code=48;break;case 90:carry=true;code=65;break;case 122:carry=true;code=97;break;default:carry=false;code+=1}}else{if(first_alphanum_char_index===-1){if(code===255){carry=true;code=0}else{carry=false;code+=1}}else{carry=true}}result=result.slice(0,i)+String.fromCharCode(code)+result.slice(i+1);if(carry&&(i===0||i===first_alphanum_char_index)){switch(code){case 65:break;case 97:break;default:code+=1}if(i===0){result=String.fromCharCode(code)+result}else{result=result.slice(0,i)+String.fromCharCode(code)+result.slice(i)}carry=false}if(!carry){break}}return result};Opal.defn(self,"$next!",def["$<<"]);def.$oct=function(){var self=this;var result,string=self,radix=8;if(/^\s*_/.test(string)){return 0}string=string.replace(/^(\s*[+-]?)(0[bodx]?)(.+)$/i,function(original,head,flag,tail){switch(tail.charAt(0)){case"+":case"-":return original;case"0":if(tail.charAt(1)==="x"&&flag==="0x"){return original}}switch(flag){case"0b":radix=2;break;case"0":case"0o":radix=8;break;case"0d":radix=10;break;case"0x":radix=16;break}return head+tail});result=parseInt(string.replace(/_(?!_)/g,""),radix);return isNaN(result)?0:result};def.$ord=function(){var self=this;return self.charCodeAt(0)};def.$partition=function(sep){var self=this;var i,m;if(sep.$$is_regexp){m=sep.exec(self);if(m===null){i=-1}else{$scope.get("MatchData").$new(sep,m);sep=m[0];i=m.index}}else{sep=$scope.get("Opal").$coerce_to(sep,$scope.get("String"),"to_str");i=self.indexOf(sep)}if(i===-1){return[self,"",""]}return[self.slice(0,i),self.slice(i,i+sep.length),self.slice(i+sep.length)]};def.$reverse=function(){var self=this;return self.split("").reverse().join("")};Opal.defn(self,"$reverse!",def["$<<"]);def.$rindex=function(search,offset){var self=this;var i,m,r,_m;if(offset===undefined){offset=self.length}else{offset=$scope.get("Opal").$coerce_to(offset,$scope.get("Integer"),"to_int");if(offset<0){offset+=self.length;if(offset<0){return nil}}}if(search.$$is_regexp){m=null;r=new RegExp(search.source,"gm"+(search.ignoreCase?"i":""));while(true){_m=r.exec(self);if(_m===null||_m.index>offset){break}m=_m;r.lastIndex=m.index+1}if(m===null){$gvars["~"]=nil;i=-1}else{$scope.get("MatchData").$new(r,m);i=m.index}}else{search=$scope.get("Opal").$coerce_to(search,$scope.get("String"),"to_str");i=self.lastIndexOf(search,offset)}return i===-1?nil:i};def.$rjust=function(width,padstr){var $a,self=this;if(padstr==null){padstr=" "}width=$scope.get("Opal").$coerce_to(width,$scope.get("Integer"),"to_int");padstr=$scope.get("Opal").$coerce_to(padstr,$scope.get("String"),"to_str").$to_s();if(($a=padstr["$empty?"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError"),"zero width padding")}if(($a=width<=self.length)!==nil&&(!$a.$$is_boolean||$a==true)){return self}var chars=Math.floor(width-self.length),patterns=Math.floor(chars/padstr.length),result=Array(patterns+1).join(padstr),remaining=chars-result.length;return result+padstr.slice(0,remaining)+self};def.$rpartition=function(sep){var self=this;var i,m,r,_m;if(sep.$$is_regexp){m=null;r=new RegExp(sep.source,"gm"+(sep.ignoreCase?"i":""));while(true){_m=r.exec(self);if(_m===null){break}m=_m;r.lastIndex=m.index+1}if(m===null){i=-1}else{$scope.get("MatchData").$new(r,m);sep=m[0];i=m.index}}else{sep=$scope.get("Opal").$coerce_to(sep,$scope.get("String"),"to_str");i=self.lastIndexOf(sep)}if(i===-1){return["","",self]}return[self.slice(0,i),self.slice(i,i+sep.length),self.slice(i+sep.length)]};def.$rstrip=function(){var self=this;return self.replace(/[\s\u0000]*$/,"")};def.$scan=TMP_7=function(pattern){var self=this,$iter=TMP_7.$$p,block=$iter||nil;TMP_7.$$p=null;var result=[],match_data=nil,match;if(pattern.$$is_regexp){pattern=new RegExp(pattern.source,"gm"+(pattern.ignoreCase?"i":""))}else{pattern=$scope.get("Opal").$coerce_to(pattern,$scope.get("String"),"to_str");pattern=new RegExp(pattern.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gm")}while((match=pattern.exec(self))!=null){match_data=$scope.get("MatchData").$new(pattern,match);if(block===nil){match.length==1?result.push(match[0]):result.push(match_data.$captures())}else{match.length==1?block(match[0]):block.call(self,match_data.$captures())}if(pattern.lastIndex===match.index){pattern.lastIndex+=1}}$gvars["~"]=match_data;return block!==nil?self:result};Opal.defn(self,"$size",def.$length);Opal.defn(self,"$slice",def["$[]"]);Opal.defn(self,"$slice!",def["$<<"]);def.$split=function(pattern,limit){var $a,self=this;if($gvars[";"]==null)$gvars[";"]=nil;if(self.length===0){return[]}if(limit===undefined){limit=0}else{limit=$scope.get("Opal")["$coerce_to!"](limit,$scope.get("Integer"),"to_int");if(limit===1){return[self]}}if(pattern===undefined||pattern===nil){pattern=($a=$gvars[";"])!==false&&$a!==nil?$a:" "}var result=[],string=self.toString(),index=0,match,i;if(pattern.$$is_regexp){pattern=new RegExp(pattern.source,"gm"+(pattern.ignoreCase?"i":""))}else{pattern=$scope.get("Opal").$coerce_to(pattern,$scope.get("String"),"to_str").$to_s();if(pattern===" "){pattern=/\s+/gm;string=string.replace(/^\s+/,"")}else{pattern=new RegExp(pattern.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gm")}}result=string.split(pattern);if(result.length===1&&result[0]===string){return result}while((i=result.indexOf(undefined))!==-1){result.splice(i,1)}if(limit===0){while(result[result.length-1]===""){result.length-=1}return result}match=pattern.exec(string);if(limit<0){if(match!==null&&match[0]===""&&pattern.source.indexOf("(?=")===-1){for(i=0;i<match.length;i++){result.push("")}}return result}if(match!==null&&match[0]===""){result.splice(limit-1,result.length-1,result.slice(limit-1).join(""));return result}i=0;while(match!==null){i++;index=pattern.lastIndex;if(i+1===limit){break}match=pattern.exec(string)}result.splice(limit-1,result.length-1,string.slice(index));return result};def.$squeeze=function(sets){var self=this;sets=$slice.call(arguments,0);if(sets.length===0){return self.replace(/(.)\1+/g,"$1")}var char_class=char_class_from_char_sets(sets);if(char_class===null){return self}return self.replace(new RegExp("("+char_class+")\\1+","g"),"$1")};Opal.defn(self,"$squeeze!",def["$<<"]);def["$start_with?"]=function(prefixes){var self=this;prefixes=$slice.call(arguments,0);for(var i=0,length=prefixes.length;i<length;i++){var prefix=$scope.get("Opal").$coerce_to(prefixes[i],$scope.get("String"),"to_str").$to_s();if(self.indexOf(prefix)===0){return true}}return false};def.$strip=function(){var self=this;return self.replace(/^\s*/,"").replace(/[\s\u0000]*$/,"")};Opal.defn(self,"$strip!",def["$<<"]);def.$sub=TMP_8=function(pattern,replacement){var self=this,$iter=TMP_8.$$p,block=$iter||nil;TMP_8.$$p=null;if(!pattern.$$is_regexp){pattern=$scope.get("Opal").$coerce_to(pattern,$scope.get("String"),"to_str");pattern=new RegExp(pattern.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"))}var result=pattern.exec(self);if(result===null){$gvars["~"]=nil;return self.toString()}$scope.get("MatchData").$new(pattern,result);if(replacement===undefined){if(block===nil){self.$raise($scope.get("ArgumentError"),"wrong number of arguments (1 for 2)")}return self.slice(0,result.index)+block(result[0])+self.slice(result.index+result[0].length)}if(replacement.$$is_hash){return self.slice(0,result.index)+replacement["$[]"](result[0]).$to_s()+self.slice(result.index+result[0].length)}replacement=$scope.get("Opal").$coerce_to(replacement,$scope.get("String"),"to_str");replacement=replacement.replace(/([\\]+)([0-9+&`'])/g,function(original,slashes,command){if(slashes.length%2===0){return original}switch(command){case"+":for(var i=result.length-1;i>0;i--){if(result[i]!==undefined){return slashes.slice(1)+result[i]}}return"";case"&":return slashes.slice(1)+result[0];case"`":return slashes.slice(1)+self.slice(0,result.index);case"'":return slashes.slice(1)+self.slice(result.index+result[0].length);default:return slashes.slice(1)+(result[command]||"")}}).replace(/\\\\/g,"\\");return self.slice(0,result.index)+replacement+self.slice(result.index+result[0].length)};Opal.defn(self,"$sub!",def["$<<"]);Opal.defn(self,"$succ",def.$next);Opal.defn(self,"$succ!",def["$<<"]);def.$sum=function(n){var self=this;if(n==null){n=16}n=$scope.get("Opal").$coerce_to(n,$scope.get("Integer"),"to_int");var result=0,length=self.length,i=0;for(;i<length;i++){result+=self.charCodeAt(i)}if(n<=0){return result}return result&Math.pow(2,n)-1};def.$swapcase=function(){var self=this;var str=self.replace(/([a-z]+)|([A-Z]+)/g,function($0,$1,$2){return $1?$0.toUpperCase():$0.toLowerCase()});if(self.constructor===String){return str}return self.$class().$new(str)};Opal.defn(self,"$swapcase!",def["$<<"]);def.$to_f=function(){var self=this;if(self.charAt(0)==="_"){return 0}var result=parseFloat(self.replace(/_/g,""));if(isNaN(result)||result==Infinity||result==-Infinity){return 0}else{return result}};def.$to_i=function(base){var self=this;if(base==null){base=10}var result,string=self.toLowerCase(),radix=$scope.get("Opal").$coerce_to(base,$scope.get("Integer"),"to_int");if(radix===1||radix<0||radix>36){self.$raise($scope.get("ArgumentError"),"invalid radix "+radix)}if(/^\s*_/.test(string)){return 0}string=string.replace(/^(\s*[+-]?)(0[bodx]?)(.+)$/,function(original,head,flag,tail){switch(tail.charAt(0)){case"+":case"-":return original;case"0":if(tail.charAt(1)==="x"&&flag==="0x"&&(radix===0||radix===16)){return original}}switch(flag){case"0b":if(radix===0||radix===2){radix=2;return head+tail}break;case"0":case"0o":if(radix===0||radix===8){radix=8;return head+tail}break;case"0d":if(radix===0||radix===10){radix=10;return head+tail}break;case"0x":if(radix===0||radix===16){radix=16;return head+tail}break}return original});result=parseInt(string.replace(/_(?!_)/g,""),radix);return isNaN(result)?0:result};def.$to_proc=function(){var $a,$b,TMP_9,self=this,sym=nil;sym=self;return($a=($b=self).$proc,$a.$$p=(TMP_9=function(args){var self=TMP_9.$$s||this,block,$a,$b,obj=nil;args=$slice.call(arguments,0);block=TMP_9.$$p||nil,TMP_9.$$p=null;if(($a=args["$empty?"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError"),"no receiver given")}obj=args.$shift();return($a=($b=obj).$__send__,$a.$$p=block.$to_proc(),$a).apply($b,[sym].concat(args))},TMP_9.$$s=self,TMP_9),$a).call($b)};def.$to_s=function(){var self=this;return self.toString()};Opal.defn(self,"$to_str",def.$to_s);Opal.defn(self,"$to_sym",def.$intern);def.$tr=function(from,to){var self=this;from=$scope.get("Opal").$coerce_to(from,$scope.get("String"),"to_str").$to_s();to=$scope.get("Opal").$coerce_to(to,$scope.get("String"),"to_str").$to_s();if(from.length==0||from===to){return self}var subs={};var from_chars=from.split("");var from_length=from_chars.length;var to_chars=to.split("");var to_length=to_chars.length;var inverse=false;var global_sub=null;if(from_chars[0]==="^"&&from_chars.length>1){inverse=true;from_chars.shift();global_sub=to_chars[to_length-1];from_length-=1}var from_chars_expanded=[];var last_from=null;var in_range=false;for(var i=0;i<from_length;i++){var ch=from_chars[i];if(last_from==null){last_from=ch;from_chars_expanded.push(ch)}else if(ch==="-"){if(last_from==="-"){from_chars_expanded.push("-");from_chars_expanded.push("-")}else if(i==from_length-1){from_chars_expanded.push("-")}else{in_range=true}}else if(in_range){var start=last_from.charCodeAt(0);var end=ch.charCodeAt(0);if(start>end){self.$raise($scope.get("ArgumentError"),'invalid range "'+String.fromCharCode(start)+"-"+String.fromCharCode(end)+'" in string transliteration')}for(var c=start+1;c<end;c++){from_chars_expanded.push(String.fromCharCode(c))}from_chars_expanded.push(ch);in_range=null;last_from=null}else{from_chars_expanded.push(ch)}}from_chars=from_chars_expanded;from_length=from_chars.length;if(inverse){for(var i=0;i<from_length;i++){subs[from_chars[i]]=true}}else{if(to_length>0){var to_chars_expanded=[];var last_to=null;var in_range=false;for(var i=0;i<to_length;i++){var ch=to_chars[i];if(last_from==null){last_from=ch;to_chars_expanded.push(ch)}else if(ch==="-"){if(last_to==="-"){to_chars_expanded.push("-");to_chars_expanded.push("-")}else if(i==to_length-1){to_chars_expanded.push("-")}else{in_range=true}}else if(in_range){var start=last_from.charCodeAt(0);var end=ch.charCodeAt(0);if(start>end){self.$raise($scope.get("ArgumentError"),'invalid range "'+String.fromCharCode(start)+"-"+String.fromCharCode(end)+'" in string transliteration')}for(var c=start+1;c<end;c++){to_chars_expanded.push(String.fromCharCode(c))}to_chars_expanded.push(ch);in_range=null;last_from=null}else{to_chars_expanded.push(ch)}}to_chars=to_chars_expanded;to_length=to_chars.length}var length_diff=from_length-to_length;if(length_diff>0){var pad_char=to_length>0?to_chars[to_length-1]:"";for(var i=0;i<length_diff;i++){to_chars.push(pad_char)}}for(var i=0;i<from_length;i++){subs[from_chars[i]]=to_chars[i]}}var new_str="";for(var i=0,length=self.length;i<length;i++){var ch=self.charAt(i);var sub=subs[ch];if(inverse){new_str+=sub==null?global_sub:ch}else{new_str+=sub!=null?sub:ch}}return new_str};Opal.defn(self,"$tr!",def["$<<"]);def.$tr_s=function(from,to){var self=this;from=$scope.get("Opal").$coerce_to(from,$scope.get("String"),"to_str").$to_s();to=$scope.get("Opal").$coerce_to(to,$scope.get("String"),"to_str").$to_s();if(from.length==0){return self}var subs={};var from_chars=from.split("");var from_length=from_chars.length;var to_chars=to.split("");var to_length=to_chars.length;var inverse=false;var global_sub=null;if(from_chars[0]==="^"&&from_chars.length>1){inverse=true;from_chars.shift();global_sub=to_chars[to_length-1];from_length-=1}var from_chars_expanded=[];var last_from=null;var in_range=false;for(var i=0;i<from_length;i++){var ch=from_chars[i];if(last_from==null){last_from=ch;from_chars_expanded.push(ch)}else if(ch==="-"){if(last_from==="-"){from_chars_expanded.push("-");from_chars_expanded.push("-")}else if(i==from_length-1){from_chars_expanded.push("-")}else{in_range=true}}else if(in_range){var start=last_from.charCodeAt(0);var end=ch.charCodeAt(0);if(start>end){self.$raise($scope.get("ArgumentError"),'invalid range "'+String.fromCharCode(start)+"-"+String.fromCharCode(end)+'" in string transliteration')}for(var c=start+1;c<end;c++){from_chars_expanded.push(String.fromCharCode(c))}from_chars_expanded.push(ch);in_range=null;last_from=null}else{from_chars_expanded.push(ch)}}from_chars=from_chars_expanded;from_length=from_chars.length;if(inverse){for(var i=0;i<from_length;i++){subs[from_chars[i]]=true}}else{if(to_length>0){var to_chars_expanded=[];var last_to=null;
var in_range=false;for(var i=0;i<to_length;i++){var ch=to_chars[i];if(last_from==null){last_from=ch;to_chars_expanded.push(ch)}else if(ch==="-"){if(last_to==="-"){to_chars_expanded.push("-");to_chars_expanded.push("-")}else if(i==to_length-1){to_chars_expanded.push("-")}else{in_range=true}}else if(in_range){var start=last_from.charCodeAt(0);var end=ch.charCodeAt(0);if(start>end){self.$raise($scope.get("ArgumentError"),'invalid range "'+String.fromCharCode(start)+"-"+String.fromCharCode(end)+'" in string transliteration')}for(var c=start+1;c<end;c++){to_chars_expanded.push(String.fromCharCode(c))}to_chars_expanded.push(ch);in_range=null;last_from=null}else{to_chars_expanded.push(ch)}}to_chars=to_chars_expanded;to_length=to_chars.length}var length_diff=from_length-to_length;if(length_diff>0){var pad_char=to_length>0?to_chars[to_length-1]:"";for(var i=0;i<length_diff;i++){to_chars.push(pad_char)}}for(var i=0;i<from_length;i++){subs[from_chars[i]]=to_chars[i]}}var new_str="";var last_substitute=null;for(var i=0,length=self.length;i<length;i++){var ch=self.charAt(i);var sub=subs[ch];if(inverse){if(sub==null){if(last_substitute==null){new_str+=global_sub;last_substitute=true}}else{new_str+=ch;last_substitute=null}}else{if(sub!=null){if(last_substitute==null||last_substitute!==sub){new_str+=sub;last_substitute=sub}}else{new_str+=ch;last_substitute=null}}}return new_str};Opal.defn(self,"$tr_s!",def["$<<"]);def.$upcase=function(){var self=this;return self.toUpperCase()};Opal.defn(self,"$upcase!",def["$<<"]);def.$freeze=function(){var self=this;return self};def["$frozen?"]=function(){var self=this;return true};def.$upto=TMP_10=function(stop,excl){var self=this,$iter=TMP_10.$$p,block=$iter||nil;if(excl==null){excl=false}TMP_10.$$p=null;if(block!==nil){}else{return self.$enum_for("upto",stop,excl)}stop=$scope.get("Opal").$coerce_to(stop,$scope.get("String"),"to_str");var a,b,s=self.toString();if(s.length===1&&stop.length===1){a=s.charCodeAt(0);b=stop.charCodeAt(0);while(a<=b){if(excl&&a===b){break}block(String.fromCharCode(a));a+=1}}else if(parseInt(s).toString()===s&&parseInt(stop).toString()===stop){a=parseInt(s);b=parseInt(stop);while(a<=b){if(excl&&a===b){break}block(a.toString());a+=1}}else{while(s.length<=stop.length&&s<=stop){if(excl&&s===stop){break}block(s);s=s.$succ()}}return self};function char_class_from_char_sets(sets){function explode_sequences_in_character_set(set){var result="",i,len=set.length,curr_char,skip_next_dash,char_code_from,char_code_upto,char_code;for(i=0;i<len;i++){curr_char=set.charAt(i);if(curr_char==="-"&&i>0&&i<len-1&&!skip_next_dash){char_code_from=set.charCodeAt(i-1);char_code_upto=set.charCodeAt(i+1);if(char_code_from>char_code_upto){self.$raise($scope.get("ArgumentError"),'invalid range "'+char_code_from+"-"+char_code_upto+'" in string transliteration')}for(char_code=char_code_from+1;char_code<char_code_upto+1;char_code++){result+=String.fromCharCode(char_code)}skip_next_dash=true;i++}else{skip_next_dash=curr_char==="\\";result+=curr_char}}return result}function intersection(setA,setB){if(setA.length===0){return setB}var result="",i,len=setA.length,chr;for(i=0;i<len;i++){chr=setA.charAt(i);if(setB.indexOf(chr)!==-1){result+=chr}}return result}var i,len,set,neg,chr,tmp,pos_intersection="",neg_intersection="";for(i=0,len=sets.length;i<len;i++){set=$scope.get("Opal").$coerce_to(sets[i],$scope.get("String"),"to_str");neg=set.charAt(0)==="^"&&set.length>1;set=explode_sequences_in_character_set(neg?set.slice(1):set);if(neg){neg_intersection=intersection(neg_intersection,set)}else{pos_intersection=intersection(pos_intersection,set)}}if(pos_intersection.length>0&&neg_intersection.length>0){tmp="";for(i=0,len=pos_intersection.length;i<len;i++){chr=pos_intersection.charAt(i);if(neg_intersection.indexOf(chr)===-1){tmp+=chr}}pos_intersection=tmp;neg_intersection=""}if(pos_intersection.length>0){return"["+$scope.get("Regexp").$escape(pos_intersection)+"]"}if(neg_intersection.length>0){return"[^"+$scope.get("Regexp").$escape(neg_intersection)+"]"}return null}})(self,null);return Opal.cdecl($scope,"Symbol",$scope.get("String"))};Opal.modules["encoding"]=function(Opal){Opal.dynamic_require_severity="warning";function $rb_plus(lhs,rhs){return typeof lhs==="number"&&typeof rhs==="number"?lhs+rhs:lhs["$+"](rhs)}var $a,$b,TMP_4,$c,TMP_6,$d,TMP_8,self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$klass=Opal.klass,$hash2=Opal.hash2;Opal.add_stubs(["$require","$[]","$new","$to_proc","$each","$const_set","$sub","$upcase","$===","$const_get","$==","$name","$include?","$names","$constants","$raise","$attr_accessor","$attr_reader","$register","$length","$bytes","$to_a","$each_byte","$bytesize","$enum_for","$find","$getbyte"]);self.$require("corelib/string");(function($base,$super){function $Encoding(){}var self=$Encoding=$klass($base,$super,"Encoding",$Encoding);var def=self.$$proto,$scope=self.$$scope,TMP_1;def.ascii=def.dummy=def.name=nil;Opal.defs(self,"$register",TMP_1=function(name,options){var $a,$b,$c,TMP_2,self=this,$iter=TMP_1.$$p,block=$iter||nil,names=nil,encoding=nil;if(options==null){options=$hash2([],{})}TMP_1.$$p=null;names=$rb_plus([name],($a=options["$[]"]("aliases"))!==false&&$a!==nil?$a:[]);encoding=($a=($b=$scope.get("Class")).$new,$a.$$p=block.$to_proc(),$a).call($b,self).$new(name,names,($a=options["$[]"]("ascii"))!==false&&$a!==nil?$a:false,($a=options["$[]"]("dummy"))!==false&&$a!==nil?$a:false);return($a=($c=names).$each,$a.$$p=(TMP_2=function(name){var self=TMP_2.$$s||this;if(name==null)name=nil;return self.$const_set(name.$sub("-","_"),encoding)},TMP_2.$$s=self,TMP_2),$a).call($c)});Opal.defs(self,"$find",function(name){try{var $a,$b,TMP_3,self=this,upcase_name=nil;upcase_name=name.$upcase();if(($a=self["$==="](upcase_name))!==nil&&(!$a.$$is_boolean||$a==true)){return upcase_name}($a=($b=self.$constants()).$each,$a.$$p=(TMP_3=function(const$){var self=TMP_3.$$s||this,$a,$b,encoding=nil;if(const$==null)const$=nil;encoding=self.$const_get(const$);if(($a=($b=encoding.$name()["$=="](upcase_name))!==false&&$b!==nil?$b:encoding.$names()["$include?"](upcase_name))!==nil&&(!$a.$$is_boolean||$a==true)){Opal.ret(encoding)}else{return nil}},TMP_3.$$s=self,TMP_3),$a).call($b);return self.$raise($scope.get("ArgumentError"),"unknown encoding name - "+name)}catch($returner){if($returner===Opal.returner){return $returner.$v}throw $returner}});(function(self){var $scope=self.$$scope,def=self.$$proto;return self.$attr_accessor("default_external")})(self.$singleton_class());self.$attr_reader("name","names");def.$initialize=function(name,names,ascii,dummy){var self=this;self.name=name;self.names=names;self.ascii=ascii;return self.dummy=dummy};def["$ascii_compatible?"]=function(){var self=this;return self.ascii};def["$dummy?"]=function(){var self=this;return self.dummy};def.$to_s=function(){var self=this;return self.name};def.$inspect=function(){var $a,self=this;return"#<Encoding:"+self.name+function(){if(($a=self.dummy)!==nil&&(!$a.$$is_boolean||$a==true)){return" (dummy)"}else{return nil}return nil}()+">"};def.$each_byte=function(){var self=this;return self.$raise($scope.get("NotImplementedError"))};def.$getbyte=function(){var self=this;return self.$raise($scope.get("NotImplementedError"))};def.$bytesize=function(){var self=this;return self.$raise($scope.get("NotImplementedError"))};(function($base,$super){function $EncodingError(){}var self=$EncodingError=$klass($base,$super,"EncodingError",$EncodingError);var def=self.$$proto,$scope=self.$$scope;return nil})(self,$scope.get("StandardError"));return function($base,$super){function $CompatibilityError(){}var self=$CompatibilityError=$klass($base,$super,"CompatibilityError",$CompatibilityError);var def=self.$$proto,$scope=self.$$scope;return nil}(self,$scope.get("EncodingError"))})(self,null);($a=($b=$scope.get("Encoding")).$register,$a.$$p=(TMP_4=function(){var self=TMP_4.$$s||this,TMP_5;Opal.defn(self,"$each_byte",TMP_5=function(string){var $a,self=this,$iter=TMP_5.$$p,block=$iter||nil;TMP_5.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);if(code<=127){($a=Opal.yield1(block,code))===$breaker?$breaker.$v:$a}else{var encoded=encodeURIComponent(string.charAt(i)).substr(1).split("%");for(var j=0,encoded_length=encoded.length;j<encoded_length;j++){($a=Opal.yield1(block,parseInt(encoded[j],16)))===$breaker?$breaker.$v:$a}}}});return(Opal.defn(self,"$bytesize",function(){var self=this;return self.$bytes().$length()}),nil)&&"bytesize"},TMP_4.$$s=self,TMP_4),$a).call($b,"UTF-8",$hash2(["aliases","ascii"],{aliases:["CP65001"],ascii:true}));($a=($c=$scope.get("Encoding")).$register,$a.$$p=(TMP_6=function(){var self=TMP_6.$$s||this,TMP_7;Opal.defn(self,"$each_byte",TMP_7=function(string){var $a,self=this,$iter=TMP_7.$$p,block=$iter||nil;TMP_7.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);($a=Opal.yield1(block,code&255))===$breaker?$breaker.$v:$a;($a=Opal.yield1(block,code>>8))===$breaker?$breaker.$v:$a}});return(Opal.defn(self,"$bytesize",function(){var self=this;return self.$bytes().$length()}),nil)&&"bytesize"},TMP_6.$$s=self,TMP_6),$a).call($c,"UTF-16LE");($a=($d=$scope.get("Encoding")).$register,$a.$$p=(TMP_8=function(){var self=TMP_8.$$s||this,TMP_9;Opal.defn(self,"$each_byte",TMP_9=function(string){var $a,self=this,$iter=TMP_9.$$p,block=$iter||nil;TMP_9.$$p=null;for(var i=0,length=string.length;i<length;i++){($a=Opal.yield1(block,string.charCodeAt(i)&255))===$breaker?$breaker.$v:$a}});return(Opal.defn(self,"$bytesize",function(){var self=this;return self.$bytes().$length()}),nil)&&"bytesize"},TMP_8.$$s=self,TMP_8),$a).call($d,"ASCII-8BIT",$hash2(["aliases","ascii"],{aliases:["BINARY"],ascii:true}));return function($base,$super){function $String(){}var self=$String=$klass($base,$super,"String",$String);var def=self.$$proto,$scope=self.$$scope,TMP_10;def.encoding=nil;def.encoding=$scope.get("Encoding").$$scope.get("UTF_16LE");def.$bytes=function(){var self=this;return self.$each_byte().$to_a()};def.$bytesize=function(){var self=this;return self.encoding.$bytesize(self)};def.$each_byte=TMP_10=function(){var $a,$b,self=this,$iter=TMP_10.$$p,block=$iter||nil;TMP_10.$$p=null;if(block!==nil){}else{return self.$enum_for("each_byte")}($a=($b=self.encoding).$each_byte,$a.$$p=block.$to_proc(),$a).call($b,self);return self};def.$encoding=function(){var self=this;return self.encoding};def.$force_encoding=function(encoding){var self=this;encoding=$scope.get("Encoding").$find(encoding);if(encoding["$=="](self.encoding)){return self}var result=new String(self);result.encoding=encoding;return result};return(def.$getbyte=function(idx){var self=this;return self.encoding.$getbyte(self,idx)},nil)&&"getbyte"}(self,null)};
