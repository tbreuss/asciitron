Opal.modules["ostruct"]=function(Opal){Opal.dynamic_require_severity="warning";var OPAL_CONFIG={method_missing:true,arity_check:false,freezing:true,tainting:true};function $rb_gt(lhs,rhs){return typeof lhs==="number"&&typeof rhs==="number"?lhs>rhs:lhs["$>"](rhs)}function $rb_plus(lhs,rhs){return typeof lhs==="number"&&typeof rhs==="number"?lhs+rhs:lhs["$+"](rhs)}var self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$klass=Opal.klass,$hash2=Opal.hash2,$range=Opal.range;Opal.add_stubs(["$each_pair","$[]=","$new_ostruct_member","$[]","$to_sym","$>","$length","$raise","$new","$end_with?","$!=","$enum_for","$is_a?","$==","$instance_variable_get","$===","$eql?","$dup","$to_n","$hash","$attr_reader","$__send__","$singleton_class","$delete","$respond_to?","$define_singleton_method","$__id__","$class","$any?","$+","$join","$map","$inspect"]);return function($base,$super){function $OpenStruct(){}var self=$OpenStruct=$klass($base,$super,"OpenStruct",$OpenStruct);var def=self.$$proto,$scope=self.$$scope,TMP_2;def.table=nil;Opal.defn(self,"$initialize",function(hash){var $a,$b,TMP_1,self=this;if(hash==null){hash=nil}self.table=$hash2([],{});if(hash!==false&&hash!==nil){return($a=($b=hash).$each_pair,$a.$$p=(TMP_1=function(key,value){var self=TMP_1.$$s||this;if(self.table==null)self.table=nil;if(key==null)key=nil;if(value==null)value=nil;return self.table["$[]="](self.$new_ostruct_member(key),value)},TMP_1.$$s=self,TMP_1),$a).call($b)}else{return nil}});Opal.defn(self,"$[]",function(name){var self=this;return self.table["$[]"](name.$to_sym())});Opal.defn(self,"$[]=",function(name,value){var self=this;return self.table["$[]="](self.$new_ostruct_member(name),value)});Opal.defn(self,"$method_missing",function(name){var $a,self=this;var array_size=arguments.length-1;if(array_size<0)array_size=0;var args=new Array(array_size);for(var arg_index=0;arg_index<array_size;arg_index++){args[arg_index]=arguments[arg_index+1]}if($rb_gt(args.$length(),2)){self.$raise($scope.get("NoMethodError").$new("undefined method `"+name+"' for #<OpenStruct>",name))}if(($a=name["$end_with?"]("="))!==nil&&(!$a.$$is_boolean||$a==true)){if(($a=args.$length()["$!="](1))!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError").$new("wrong number of arguments (0 for 1)"))}return self.table["$[]="](self.$new_ostruct_member(name["$[]"]($range(0,-2,false))),args["$[]"](0))}else{return self.table["$[]"](name.$to_sym())}});Opal.defn(self,"$each_pair",TMP_2=function(){var $a,$b,TMP_3,self=this,$iter=TMP_2.$$p,$yield=$iter||nil;TMP_2.$$p=null;if($yield!==nil){}else{return self.$enum_for("each_pair")}return($a=($b=self.table).$each_pair,$a.$$p=(TMP_3=function(pair){var self=TMP_3.$$s||this,$a;if(pair==null)pair=nil;return $a=Opal.yield1($yield,pair),$a===$breaker?$a:$a},TMP_3.$$s=self,TMP_3),$a).call($b)});Opal.defn(self,"$==",function(other){var $a,self=this;if(($a=other["$is_a?"]($scope.get("OpenStruct")))!==nil&&(!$a.$$is_boolean||$a==true)){}else{return false}return self.table["$=="](other.$instance_variable_get("@table"))});Opal.defn(self,"$===",function(other){var $a,self=this;if(($a=other["$is_a?"]($scope.get("OpenStruct")))!==nil&&(!$a.$$is_boolean||$a==true)){}else{return false}return self.table["$==="](other.$instance_variable_get("@table"))});Opal.defn(self,"$eql?",function(other){var $a,self=this;if(($a=other["$is_a?"]($scope.get("OpenStruct")))!==nil&&(!$a.$$is_boolean||$a==true)){}else{return false}return self.table["$eql?"](other.$instance_variable_get("@table"))});Opal.defn(self,"$to_h",function(){var self=this;return self.table.$dup()});Opal.defn(self,"$to_n",function(){var self=this;return self.table.$to_n()});Opal.defn(self,"$hash",function(){var self=this;return self.table.$hash()});self.$attr_reader("table");Opal.defn(self,"$delete_field",function(name){var self=this,sym=nil;sym=name.$to_sym();try{self.$singleton_class().$__send__("remove_method",sym,""+sym+"=")}catch($err){if(Opal.rescue($err,[$scope.get("NameError")])){try{nil}finally{Opal.gvars["!"]=Opal.exceptions.pop()||Opal.nil}}else{throw $err}}return self.table.$delete(sym)});Opal.defn(self,"$new_ostruct_member",function(name){var $a,$b,TMP_4,$c,TMP_5,self=this;name=name.$to_sym();if(($a=self["$respond_to?"](name))!==nil&&(!$a.$$is_boolean||$a==true)){}else{($a=($b=self).$define_singleton_method,$a.$$p=(TMP_4=function(){var self=TMP_4.$$s||this;if(self.table==null)self.table=nil;return self.table["$[]"](name)},TMP_4.$$s=self,TMP_4),$a).call($b,name);($a=($c=self).$define_singleton_method,$a.$$p=(TMP_5=function(x){var self=TMP_5.$$s||this;if(self.table==null)self.table=nil;if(x==null)x=nil;return self.table["$[]="](name,x)},TMP_5.$$s=self,TMP_5),$a).call($c,""+name+"=")}return name});var ostruct_ids;Opal.defn(self,"$inspect",function(){var $a,$b,TMP_6,self=this,result=nil;var top=ostruct_ids===undefined,ostruct_id=self.$__id__();try{result="#<"+self.$class();if(top){ostruct_ids={}}if(ostruct_ids.hasOwnProperty(ostruct_id)){return result+" ...>"}ostruct_ids[ostruct_id]=true;if(($a=self.table["$any?"]())!==nil&&(!$a.$$is_boolean||$a==true)){result=$rb_plus(result," ")}result=$rb_plus(result,($a=($b=self.$each_pair()).$map,$a.$$p=(TMP_6=function(name,value){var self=TMP_6.$$s||this;if(name==null)name=nil;if(value==null)value=nil;return""+name+"="+value.$inspect()},TMP_6.$$s=self,TMP_6),$a).call($b).$join(", "));result=$rb_plus(result,">");return result}finally{if(top){ostruct_ids=undefined}}});return Opal.alias(self,"to_s","inspect")}($scope.base,null)};
