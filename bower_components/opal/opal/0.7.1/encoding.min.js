Opal.modules["corelib/comparable"]=function(Opal){Opal.dynamic_require_severity="warning";var self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$module=Opal.module;Opal.add_stubs(["$===","$>","$<","$equal?","$<=>","$normalize","$raise","$class"]);return function($base){var self=$module($base,"Comparable");var def=self.$$proto,$scope=self.$$scope;Opal.defs(self,"$normalize",function(what){var $a,self=this;if(($a=$scope.get("Integer")["$==="](what))!==nil&&(!$a.$$is_boolean||$a==true)){return what}if(what["$>"](0)){return 1}if(what["$<"](0)){return-1}return 0});Opal.defn(self,"$==",function(other){var $a,self=this,cmp=nil;try{if(($a=self["$equal?"](other))!==nil&&(!$a.$$is_boolean||$a==true)){return true}if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{return false}return $scope.get("Comparable").$normalize(cmp)==0}catch($err){if(Opal.rescue($err,[$scope.get("StandardError")])){return false}else{throw $err}}});Opal.defn(self,"$>",function(other){var $a,self=this,cmp=nil;if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed")}return $scope.get("Comparable").$normalize(cmp)>0});Opal.defn(self,"$>=",function(other){var $a,self=this,cmp=nil;if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed")}return $scope.get("Comparable").$normalize(cmp)>=0});Opal.defn(self,"$<",function(other){var $a,self=this,cmp=nil;if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed")}return $scope.get("Comparable").$normalize(cmp)<0});Opal.defn(self,"$<=",function(other){var $a,self=this,cmp=nil;if(($a=cmp=self["$<=>"](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("ArgumentError"),"comparison of "+self.$class()+" with "+other.$class()+" failed")}return $scope.get("Comparable").$normalize(cmp)<=0});Opal.defn(self,"$between?",function(min,max){var self=this;if(self["$<"](min)){return false}if(self["$>"](max)){return false}return true})}(self)};Opal.modules["corelib/string"]=function(Opal){Opal.dynamic_require_severity="warning";var self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$klass=Opal.klass,$gvars=Opal.gvars;Opal.add_stubs(["$require","$include","$to_str","$===","$format","$coerce_to","$to_s","$respond_to?","$<=>","$raise","$=~","$empty?","$ljust","$ceil","$/","$+","$rjust","$floor","$to_a","$each_char","$to_proc","$coerce_to!","$initialize_clone","$initialize_dup","$enum_for","$split","$chomp","$escape","$class","$to_i","$!","$each_line","$match","$new","$try_convert","$chars","$&","$join","$is_a?","$[]","$str","$value","$proc","$shift","$__send__"]);self.$require("corelib/comparable");(function($base,$super){function $String(){}var self=$String=$klass($base,$super,"String",$String);var def=self.$$proto,$scope=self.$$scope,TMP_1,TMP_2,TMP_3,TMP_4,TMP_5,TMP_6,TMP_7;def.length=nil;self.$include($scope.get("Comparable"));def.$$is_string=true;Opal.defs(self,"$try_convert",function(what){var self=this;try{return what.$to_str()}catch($err){if(true){return nil}else{throw $err}}});Opal.defs(self,"$new",function(str){var self=this;if(str==null){str=""}return new String(str)});def["$%"]=function(data){var $a,self=this;if(($a=$scope.get("Array")["$==="](data))!==nil&&(!$a.$$is_boolean||$a==true)){return($a=self).$format.apply($a,[self].concat(data))}else{return self.$format(self,data)}};def["$*"]=function(count){var self=this;if(count<1){return""}var result="",pattern=self;while(count>0){if(count&1){result+=pattern}count>>=1;pattern+=pattern}return result};def["$+"]=function(other){var self=this;other=$scope.get("Opal").$coerce_to(other,$scope.get("String"),"to_str");return self+other.$to_s()};def["$<=>"]=function(other){var $a,self=this;if(($a=other["$respond_to?"]("to_str"))!==nil&&(!$a.$$is_boolean||$a==true)){other=other.$to_str().$to_s();return self>other?1:self<other?-1:0}else{var cmp=other["$<=>"](self);if(cmp===nil){return nil}else{return cmp>0?-1:cmp<0?1:0}}};def["$<<"]=function(other){var self=this;return self.$raise($scope.get("NotImplementedError"),"#<< not supported. Mutable String methods are not supported in Opal.")};def["$=="]=function(other){var $a,self=this;if(($a=$scope.get("String")["$==="](other))!==nil&&(!$a.$$is_boolean||$a==true)){}else{return false}return self.$to_s()==other.$to_s()};Opal.defn(self,"$eql?",def["$=="]);Opal.defn(self,"$===",def["$=="]);def["$=~"]=function(other){var self=this;if(other.$$is_string){self.$raise($scope.get("TypeError"),"type mismatch: String given")}return other["$=~"](self)};def["$[]"]=function(index,length){var self=this;var size=self.length;if(index.$$is_range){var exclude=index.exclude,length=index.end,index=index.begin;if(index<0){index+=size}if(length<0){length+=size}if(!exclude){length+=1}if(index>size){return nil}length=length-index;if(length<0){length=0}return self.substr(index,length)}if(index<0){index+=self.length}if(length==null){if(index>=self.length||index<0){return nil}return self.substr(index,1)}if(index>self.length||index<0){return nil}return self.substr(index,length)};def.$capitalize=function(){var self=this;return self.charAt(0).toUpperCase()+self.substr(1).toLowerCase()};Opal.defn(self,"$capitalize!",def["$<<"]);def.$casecmp=function(other){var self=this;other=$scope.get("Opal").$coerce_to(other,$scope.get("String"),"to_str").$to_s();return self.toLowerCase()["$<=>"](other.toLowerCase())};def.$center=function(width,padstr){var $a,self=this;if(padstr==null){padstr=" "}width=$scope.get("Opal").$coerce_to(width,$scope.get("Integer"),"to_int");padstr=$scope.get("Opal").$coerce_to(padstr,$scope.get("String"),"to_str").$to_s();if(($a=padstr["$empty?"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError"),"zero width padding")}if(($a=width<=self.length)!==nil&&(!$a.$$is_boolean||$a==true)){return self}var ljustified=self.$ljust(width["$+"](self.length)["$/"](2).$ceil(),padstr),rjustified=self.$rjust(width["$+"](self.length)["$/"](2).$floor(),padstr);return rjustified+ljustified.slice(self.length)};def.$chars=TMP_1=function(){var $a,$b,self=this,$iter=TMP_1.$$p,block=$iter||nil;TMP_1.$$p=null;if(block!==false&&block!==nil){}else{return self.$each_char().$to_a()}return($a=($b=self).$each_char,$a.$$p=block.$to_proc(),$a).call($b)};def.$chomp=function(separator){var $a,self=this;if($gvars["/"]==null)$gvars["/"]=nil;if(separator==null){separator=$gvars["/"]}if(($a=separator===nil||self.length===0)!==nil&&(!$a.$$is_boolean||$a==true)){return self}separator=$scope.get("Opal")["$coerce_to!"](separator,$scope.get("String"),"to_str").$to_s();if(separator==="\n"){return self.replace(/\r?\n?$/,"")}else if(separator===""){return self.replace(/(\r?\n)+$/,"")}else if(self.length>separator.length){var tail=self.substr(self.length-separator.length,separator.length);if(tail===separator){return self.substr(0,self.length-separator.length)}}return self};Opal.defn(self,"$chomp!",def["$<<"]);def.$chop=function(){var self=this;var length=self.length;if(length<=1){return""}if(self.charAt(length-1)==="\n"&&self.charAt(length-2)==="\r"){return self.substr(0,length-2)}else{return self.substr(0,length-1)}};Opal.defn(self,"$chop!",def["$<<"]);def.$chr=function(){var self=this;return self.charAt(0)};def.$clone=function(){var self=this,copy=nil;copy=self.slice();copy.$initialize_clone(self);return copy};def.$dup=function(){var self=this,copy=nil;copy=self.slice();copy.$initialize_dup(self);return copy};def.$count=function(str){var self=this;return(self.length-self.replace(new RegExp(str,"g"),"").length)/str.length};Opal.defn(self,"$dup",def.$clone);def.$downcase=function(){var self=this;return self.toLowerCase()};Opal.defn(self,"$downcase!",def["$<<"]);def.$each_char=TMP_2=function(){var $a,self=this,$iter=TMP_2.$$p,block=$iter||nil;TMP_2.$$p=null;if(block!==nil){}else{return self.$enum_for("each_char")}for(var i=0,length=self.length;i<length;i++){($a=Opal.yield1(block,self.charAt(i)))===$breaker?$breaker.$v:$a}return self};def.$each_line=TMP_3=function(separator){var $a,self=this,$iter=TMP_3.$$p,$yield=$iter||nil;if($gvars["/"]==null)$gvars["/"]=nil;if(separator==null){separator=$gvars["/"]}TMP_3.$$p=null;if($yield!==nil){}else{return self.$split(separator)}var chomped=self.$chomp(),trailing=self.length!=chomped.length,splitted=chomped.split(separator);for(var i=0,length=splitted.length;i<length;i++){if(i<length-1||trailing){($a=Opal.yield1($yield,splitted[i]+separator))===$breaker?$breaker.$v:$a}else{($a=Opal.yield1($yield,splitted[i]))===$breaker?$breaker.$v:$a}}return self};def["$empty?"]=function(){var self=this;return self.length===0};def["$end_with?"]=function(suffixes){var self=this;suffixes=$slice.call(arguments,0);for(var i=0,length=suffixes.length;i<length;i++){var suffix=$scope.get("Opal").$coerce_to(suffixes[i],$scope.get("String"),"to_str").$to_s();if(self.length>=suffix.length&&self.substr(self.length-suffix.length,suffix.length)==suffix){return true}}return false};Opal.defn(self,"$eql?",def["$=="]);Opal.defn(self,"$equal?",def["$==="]);def.$gsub=TMP_4=function(pattern,replace){var $a,$b,self=this,$iter=TMP_4.$$p,block=$iter||nil;TMP_4.$$p=null;if(($a=($b=$scope.get("String")["$==="](pattern))!==false&&$b!==nil?$b:pattern["$respond_to?"]("to_str"))!==nil&&(!$a.$$is_boolean||$a==true)){pattern=new RegExp(""+$scope.get("Regexp").$escape(pattern.$to_str()))}if(($a=$scope.get("Regexp")["$==="](pattern))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("TypeError"),"wrong argument type "+pattern.$class()+" (expected Regexp)")}var pattern=pattern.toString(),options=pattern.substr(pattern.lastIndexOf("/")+1)+"g",regexp=pattern.substr(1,pattern.lastIndexOf("/")-1);self.$sub.$$p=block;return self.$sub(new RegExp(regexp,options),replace)};Opal.defn(self,"$gsub!",def["$<<"]);def.$hash=function(){var self=this;return self.toString()};def.$hex=function(){var self=this;return self.$to_i(16)};def["$include?"]=function(other){var $a,self=this;if(other.$$is_string){return self.indexOf(other)!==-1}if(($a=other["$respond_to?"]("to_str"))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("TypeError"),"no implicit conversion of "+other.$class()+" into String")}return self.indexOf(other.$to_str())!==-1};def.$index=function(what,offset){var $a,self=this,result=nil;if(offset==null){offset=nil}if(($a=$scope.get("String")["$==="](what))!==nil&&(!$a.$$is_boolean||$a==true)){what=what.$to_s()}else if(($a=what["$respond_to?"]("to_str"))!==nil&&(!$a.$$is_boolean||$a==true)){what=what.$to_str().$to_s()}else if(($a=$scope.get("Regexp")["$==="](what)["$!"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("TypeError"),"type mismatch: "+what.$class()+" given")}result=-1;if(offset!==false&&offset!==nil){offset=$scope.get("Opal").$coerce_to(offset,$scope.get("Integer"),"to_int");var size=self.length;if(offset<0){offset=offset+size}if(offset>size){return nil}if(($a=$scope.get("Regexp")["$==="](what))!==nil&&(!$a.$$is_boolean||$a==true)){result=($a=what["$=~"](self.substr(offset)))!==false&&$a!==nil?$a:-1}else{result=self.substr(offset).indexOf(what)}if(result!==-1){result+=offset}}else if(($a=$scope.get("Regexp")["$==="](what))!==nil&&(!$a.$$is_boolean||$a==true)){result=($a=what["$=~"](self))!==false&&$a!==nil?$a:-1}else{result=self.indexOf(what)}if(($a=result===-1)!==nil&&(!$a.$$is_boolean||$a==true)){return nil}else{return result}};def.$inspect=function(){var self=this;var escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};escapable.lastIndex=0;return escapable.test(self)?'"'+self.replace(escapable,function(a){var c=meta[a];return typeof c==="string"?c:"\\u"+("0000"+a.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+self+'"'};def.$intern=function(){var self=this;return self};def.$lines=function(separator){var self=this;if($gvars["/"]==null)$gvars["/"]=nil;if(separator==null){separator=$gvars["/"]}return self.$each_line(separator).$to_a()};def.$length=function(){var self=this;return self.length};def.$ljust=function(width,padstr){var $a,self=this;if(padstr==null){padstr=" "}width=$scope.get("Opal").$coerce_to(width,$scope.get("Integer"),"to_int");padstr=$scope.get("Opal").$coerce_to(padstr,$scope.get("String"),"to_str").$to_s();if(($a=padstr["$empty?"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError"),"zero width padding")}if(($a=width<=self.length)!==nil&&(!$a.$$is_boolean||$a==true)){return self}var index=-1,result="";width-=self.length;while(++index<width){result+=padstr}return self+result.slice(0,width)};def.$lstrip=function(){var self=this;return self.replace(/^\s*/,"")};Opal.defn(self,"$lstrip!",def["$<<"]);def.$match=TMP_5=function(pattern,pos){var $a,$b,self=this,$iter=TMP_5.$$p,block=$iter||nil;TMP_5.$$p=null;if(($a=($b=$scope.get("String")["$==="](pattern))!==false&&$b!==nil?$b:pattern["$respond_to?"]("to_str"))!==nil&&(!$a.$$is_boolean||$a==true)){pattern=new RegExp(""+$scope.get("Regexp").$escape(pattern.$to_str()))}if(($a=$scope.get("Regexp")["$==="](pattern))!==nil&&(!$a.$$is_boolean||$a==true)){}else{self.$raise($scope.get("TypeError"),"wrong argument type "+pattern.$class()+" (expected Regexp)")}return($a=($b=pattern).$match,$a.$$p=block.$to_proc(),$a).call($b,self,pos)};def.$next=function(){var self=this;if(self.length===0){return""}var initial=self.substr(0,self.length-1);var last=String.fromCharCode(self.charCodeAt(self.length-1)+1);return initial+last};Opal.defn(self,"$next!",def["$<<"]);def.$ord=function(){var self=this;return self.charCodeAt(0)};def.$partition=function(str){var self=this;var result=self.split(str);var splitter=result[0].length===self.length?"":str;return[result[0],splitter,result.slice(1).join(str.toString())]};def.$reverse=function(){var self=this;return self.split("").reverse().join("")};Opal.defn(self,"$reverse!",def["$<<"]);def.$rindex=function(search,offset){var self=this;var search_type=search==null?Opal.NilClass:search.constructor;if(search_type!=String&&search_type!=RegExp){var msg="type mismatch: "+search_type+" given";self.$raise($scope.get("TypeError").$new(msg))}if(self.length==0){return search.length==0?0:nil}var result=-1;if(offset!=null){if(offset<0){offset=self.length+offset}if(search_type==String){result=self.lastIndexOf(search,offset)}else{result=self.substr(0,offset+1).$reverse().search(search);if(result!==-1){result=offset-result}}}else{if(search_type==String){result=self.lastIndexOf(search)}else{result=self.$reverse().search(search);if(result!==-1){result=self.length-1-result}}}return result===-1?nil:result};def.$rjust=function(width,padstr){var $a,self=this;if(padstr==null){padstr=" "}width=$scope.get("Opal").$coerce_to(width,$scope.get("Integer"),"to_int");padstr=$scope.get("Opal").$coerce_to(padstr,$scope.get("String"),"to_str").$to_s();if(($a=padstr["$empty?"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError"),"zero width padding")}if(($a=width<=self.length)!==nil&&(!$a.$$is_boolean||$a==true)){return self}var chars=Math.floor(width-self.length),patterns=Math.floor(chars/padstr.length),result=Array(patterns+1).join(padstr),remaining=chars-result.length;return result+padstr.slice(0,remaining)+self};def.$rstrip=function(){var self=this;return self.replace(/\s*$/,"")};def.$scan=TMP_6=function(pattern){var self=this,$iter=TMP_6.$$p,block=$iter||nil;TMP_6.$$p=null;if(pattern.global){pattern.lastIndex=0}else{pattern=new RegExp(pattern.source,"g"+(pattern.multiline?"m":"")+(pattern.ignoreCase?"i":""))}var result=[];var match;while((match=pattern.exec(self))!=null){var match_data=$scope.get("MatchData").$new(pattern,match);if(block===nil){match.length==1?result.push(match[0]):result.push(match.slice(1))}else{match.length==1?block(match[0]):block.apply(self,match.slice(1))}}return block!==nil?self:result};Opal.defn(self,"$size",def.$length);Opal.defn(self,"$slice",def["$[]"]);Opal.defn(self,"$slice!",def["$<<"]);def.$split=function(pattern,limit){var self=this,$a;if($gvars[";"]==null)$gvars[";"]=nil;if(pattern==null){pattern=($a=$gvars[";"])!==false&&$a!==nil?$a:" "}if(pattern===nil||pattern===undefined){pattern=$gvars[";"]}var result=[];if(limit!==undefined){limit=$scope.get("Opal")["$coerce_to!"](limit,$scope.get("Integer"),"to_int")}if(self.length===0){return[]}if(limit===1){return[self]}if(pattern&&pattern.$$is_regexp){var pattern_str=pattern.toString();var blank_pattern=pattern_str.substr(0,3)=="/^/"||pattern_str.substr(0,6)=="/(?:)/";if(limit===undefined||limit===0){result=self.split(blank_pattern?/(?:)/:pattern)}else{if(!pattern.global){pattern=eval(pattern_str+"g")}var match_data;var prev_index=0;pattern.lastIndex=0;while((match_data=pattern.exec(self))!==null){var segment=self.slice(prev_index,match_data.index);result.push(segment);prev_index=pattern.lastIndex;if(match_data[0].length===0){if(blank_pattern){pattern=/(?:)/}result=self.split(pattern);if(limit!==undefined&&limit<0&&blank_pattern){result.push("")}prev_index=undefined;break}if(limit!==undefined&&limit>1&&result.length+1==limit){break}}if(prev_index!==undefined){result.push(self.slice(prev_index,self.length))}}}else{var splitted=0,start=0,lim=0;if(pattern===nil||pattern===undefined){pattern=" "}else{pattern=$scope.get("Opal").$try_convert(pattern,$scope.get("String"),"to_str").$to_s()}var string=pattern==" "?self.replace(/[\r\n\t\v]\s+/g," "):self;var cursor=-1;while((cursor=string.indexOf(pattern,start))>-1&&cursor<string.length){if(splitted+1===limit){break}if(pattern==" "&&cursor==start){start=cursor+1;continue}result.push(string.substr(start,pattern.length?cursor-start:1));splitted++;start=cursor+(pattern.length?pattern.length:1)}if(string.length>0&&(limit<0||string.length>start)){if(string.length==start){result.push("")}else{result.push(string.substr(start,string.length))}}}if(limit===undefined||limit===0){while(result[result.length-1]===""){result.length=result.length-1}}if(limit>0){var tail=result.slice(limit-1).join("");result.splice(limit-1,result.length-1,tail)}return result};def.$squeeze=function(sets){var self=this;sets=$slice.call(arguments,0);if(sets.length===0){return self.replace(/(.)\1+/g,"$1")}var set=$scope.get("Opal").$coerce_to(sets[0],$scope.get("String"),"to_str").$chars();for(var i=1,length=sets.length;i<length;i++){set=set["$&"]($scope.get("Opal").$coerce_to(sets[i],$scope.get("String"),"to_str").$chars())}if(set.length===0){return self}return self.replace(new RegExp("(["+$scope.get("Regexp").$escape(set.$join())+"])\\1+","g"),"$1")};Opal.defn(self,"$squeeze!",def["$<<"]);def["$start_with?"]=function(prefixes){var self=this;prefixes=$slice.call(arguments,0);for(var i=0,length=prefixes.length;i<length;i++){var prefix=$scope.get("Opal").$coerce_to(prefixes[i],$scope.get("String"),"to_str").$to_s();if(self.indexOf(prefix)===0){return true}}return false};def.$strip=function(){var self=this;return self.replace(/^\s*/,"").replace(/\s*$/,"")};Opal.defn(self,"$strip!",def["$<<"]);function convertReplace(replace){return replace.replace(/(^|[^\\])\\(\d)/g,function(a,b,c){return b+"$"+c}).replace(/(^|[^\\])(\\\\)+\\\\(\d)/g,"$1$2\\$3").replace(/(^|[^\\])(?:(\\)\\)+([^\\]|$)/g,"$1$2$3")}def.$sub=TMP_7=function(pattern,replace){var self=this,$iter=TMP_7.$$p,block=$iter||nil;TMP_7.$$p=null;if(typeof pattern!=="string"&&!pattern.$$is_regexp){pattern=$scope.get("Opal")["$coerce_to!"](pattern,$scope.get("String"),"to_str")}if(replace!==undefined){if(replace["$is_a?"]($scope.get("Hash"))){return self.replace(pattern,function(str){var value=replace["$[]"](self.$str());return value==null?nil:self.$value().$to_s()})}else{if(typeof replace!=="string"){replace=$scope.get("Opal")["$coerce_to!"](replace,$scope.get("String"),"to_str")}replace=convertReplace(replace);return self.replace(pattern,replace)}}else if(block!=null&&block!==nil){return self.replace(pattern,function(){var match_data=[];for(var i=0,len=arguments.length;i<len;i++){var arg=arguments[i];if(arg==undefined){match_data.push(nil)}else{match_data.push(arg)}}var str=match_data.pop();var offset=match_data.pop();var match_len=match_data.length;for(var i=1;i<match_len;i++){Opal.gvars[String(i)]=match_data[i]}$gvars["&"]=match_data[0];$gvars["~"]=match_data;return block(match_data[0])})}else{self.$raise($scope.get("ArgumentError"),"wrong number of arguments (1 for 2)")}};Opal.defn(self,"$sub!",def["$<<"]);Opal.defn(self,"$succ",def.$next);Opal.defn(self,"$succ!",def["$<<"]);def.$sum=function(n){var self=this;if(n==null){n=16}var result=0;for(var i=0,length=self.length;i<length;i++){result+=self.charCodeAt(i)%((1<<n)-1)}return result};def.$swapcase=function(){var self=this;var str=self.replace(/([a-z]+)|([A-Z]+)/g,function($0,$1,$2){return $1?$0.toUpperCase():$0.toLowerCase()});if(self.constructor===String){return str}return self.$class().$new(str)};Opal.defn(self,"$swapcase!",def["$<<"]);def.$to_f=function(){var self=this;if(self.charAt(0)==="_"){return 0}var result=parseFloat(self.replace(/_/g,""));if(isNaN(result)||result==Infinity||result==-Infinity){return 0}else{return result}};def.$to_i=function(base){var self=this;if(base==null){base=10}var result=parseInt(self,base);if(isNaN(result)){return 0}return result};def.$to_proc=function(){var $a,$b,TMP_8,self=this,sym=nil;sym=self;return($a=($b=self).$proc,$a.$$p=(TMP_8=function(args){var self=TMP_8.$$s||this,block,$a,$b,obj=nil;args=$slice.call(arguments,0);block=TMP_8.$$p||nil,TMP_8.$$p=null;if(($a=args["$empty?"]())!==nil&&(!$a.$$is_boolean||$a==true)){self.$raise($scope.get("ArgumentError"),"no receiver given")}obj=args.$shift();return($a=($b=obj).$__send__,$a.$$p=block.$to_proc(),$a).apply($b,[sym].concat(args))},TMP_8.$$s=self,TMP_8),$a).call($b)};def.$to_s=function(){var self=this;return self.toString()};Opal.defn(self,"$to_str",def.$to_s);Opal.defn(self,"$to_sym",def.$intern);def.$tr=function(from,to){var self=this;if(from.length==0||from===to){return self}var subs={};var from_chars=from.split("");var from_length=from_chars.length;var to_chars=to.split("");var to_length=to_chars.length;var inverse=false;var global_sub=null;if(from_chars[0]==="^"){inverse=true;from_chars.shift();global_sub=to_chars[to_length-1];from_length-=1}var from_chars_expanded=[];var last_from=null;var in_range=false;for(var i=0;i<from_length;i++){var ch=from_chars[i];if(last_from==null){last_from=ch;from_chars_expanded.push(ch)}else if(ch==="-"){if(last_from==="-"){from_chars_expanded.push("-");from_chars_expanded.push("-")}else if(i==from_length-1){from_chars_expanded.push("-")}else{in_range=true}}else if(in_range){var start=last_from.charCodeAt(0)+1;var end=ch.charCodeAt(0);for(var c=start;c<end;c++){from_chars_expanded.push(String.fromCharCode(c))}from_chars_expanded.push(ch);in_range=null;last_from=null}else{from_chars_expanded.push(ch)}}from_chars=from_chars_expanded;from_length=from_chars.length;if(inverse){for(var i=0;i<from_length;i++){subs[from_chars[i]]=true}}else{if(to_length>0){var to_chars_expanded=[];var last_to=null;var in_range=false;for(var i=0;i<to_length;i++){var ch=to_chars[i];if(last_from==null){last_from=ch;to_chars_expanded.push(ch)}else if(ch==="-"){if(last_to==="-"){to_chars_expanded.push("-");to_chars_expanded.push("-")}else if(i==to_length-1){to_chars_expanded.push("-")}else{in_range=true}}else if(in_range){var start=last_from.charCodeAt(0)+1;var end=ch.charCodeAt(0);for(var c=start;c<end;c++){to_chars_expanded.push(String.fromCharCode(c))}to_chars_expanded.push(ch);in_range=null;last_from=null}else{to_chars_expanded.push(ch)}}to_chars=to_chars_expanded;to_length=to_chars.length}var length_diff=from_length-to_length;if(length_diff>0){var pad_char=to_length>0?to_chars[to_length-1]:"";for(var i=0;i<length_diff;i++){to_chars.push(pad_char)}}for(var i=0;i<from_length;i++){subs[from_chars[i]]=to_chars[i]}}var new_str="";for(var i=0,length=self.length;i<length;i++){var ch=self.charAt(i);var sub=subs[ch];if(inverse){new_str+=sub==null?global_sub:ch}else{new_str+=sub!=null?sub:ch}}return new_str};Opal.defn(self,"$tr!",def["$<<"]);def.$tr_s=function(from,to){var self=this;if(from.length==0){return self}var subs={};var from_chars=from.split("");var from_length=from_chars.length;var to_chars=to.split("");var to_length=to_chars.length;var inverse=false;var global_sub=null;if(from_chars[0]==="^"){inverse=true;from_chars.shift();global_sub=to_chars[to_length-1];from_length-=1}var from_chars_expanded=[];var last_from=null;var in_range=false;for(var i=0;i<from_length;i++){var ch=from_chars[i];if(last_from==null){last_from=ch;from_chars_expanded.push(ch)}else if(ch==="-"){if(last_from==="-"){from_chars_expanded.push("-");from_chars_expanded.push("-")}else if(i==from_length-1){from_chars_expanded.push("-")}else{in_range=true}}else if(in_range){var start=last_from.charCodeAt(0)+1;var end=ch.charCodeAt(0);for(var c=start;c<end;c++){from_chars_expanded.push(String.fromCharCode(c))}from_chars_expanded.push(ch);in_range=null;last_from=null}else{from_chars_expanded.push(ch)}}from_chars=from_chars_expanded;from_length=from_chars.length;if(inverse){for(var i=0;i<from_length;i++){subs[from_chars[i]]=true}}else{if(to_length>0){var to_chars_expanded=[];var last_to=null;var in_range=false;for(var i=0;i<to_length;i++){var ch=to_chars[i];if(last_from==null){last_from=ch;to_chars_expanded.push(ch)}else if(ch==="-"){if(last_to==="-"){to_chars_expanded.push("-");to_chars_expanded.push("-")}else if(i==to_length-1){to_chars_expanded.push("-")}else{in_range=true}}else if(in_range){var start=last_from.charCodeAt(0)+1;var end=ch.charCodeAt(0);for(var c=start;c<end;c++){to_chars_expanded.push(String.fromCharCode(c))}to_chars_expanded.push(ch);in_range=null;last_from=null}else{to_chars_expanded.push(ch)}}to_chars=to_chars_expanded;to_length=to_chars.length}var length_diff=from_length-to_length;if(length_diff>0){var pad_char=to_length>0?to_chars[to_length-1]:"";for(var i=0;i<length_diff;i++){to_chars.push(pad_char)}}for(var i=0;i<from_length;i++){subs[from_chars[i]]=to_chars[i]}}var new_str="";var last_substitute=null;for(var i=0,length=self.length;i<length;i++){var ch=self.charAt(i);var sub=subs[ch];if(inverse){if(sub==null){if(last_substitute==null){new_str+=global_sub;last_substitute=true}}else{new_str+=ch;last_substitute=null}}else{if(sub!=null){if(last_substitute==null||last_substitute!==sub){new_str+=sub;last_substitute=sub}}else{new_str+=ch;last_substitute=null}}}return new_str};Opal.defn(self,"$tr_s!",def["$<<"]);def.$upcase=function(){var self=this;return self.toUpperCase()};Opal.defn(self,"$upcase!",def["$<<"]);def.$freeze=function(){var self=this;return self};return(def["$frozen?"]=function(){var self=this;return true},nil)&&"frozen?"})(self,null);return Opal.cdecl($scope,"Symbol",$scope.get("String"))};(function(Opal){Opal.dynamic_require_severity="warning";var $a,$b,TMP_4,$c,TMP_6,$d,TMP_8,self=Opal.top,$scope=Opal,nil=Opal.nil,$breaker=Opal.breaker,$slice=Opal.slice,$klass=Opal.klass,$hash2=Opal.hash2;Opal.add_stubs(["$require","$+","$[]","$new","$to_proc","$each","$const_set","$sub","$upcase","$===","$const_get","$==","$name","$include?","$names","$constants","$raise","$attr_accessor","$attr_reader","$register","$length","$bytes","$to_a","$each_byte","$bytesize","$enum_for","$find","$getbyte"]);self.$require("corelib/string");(function($base,$super){function $Encoding(){}var self=$Encoding=$klass($base,$super,"Encoding",$Encoding);var def=self.$$proto,$scope=self.$$scope,TMP_1;def.ascii=def.dummy=def.name=nil;Opal.defs(self,"$register",TMP_1=function(name,options){var $a,$b,$c,TMP_2,self=this,$iter=TMP_1.$$p,block=$iter||nil,names=nil,encoding=nil;if(options==null){options=$hash2([],{})}TMP_1.$$p=null;names=[name]["$+"](($a=options["$[]"]("aliases"))!==false&&$a!==nil?$a:[]);encoding=($a=($b=$scope.get("Class")).$new,$a.$$p=block.$to_proc(),$a).call($b,self).$new(name,names,($a=options["$[]"]("ascii"))!==false&&$a!==nil?$a:false,($a=options["$[]"]("dummy"))!==false&&$a!==nil?$a:false);return($a=($c=names).$each,$a.$$p=(TMP_2=function(name){var self=TMP_2.$$s||this;if(name==null)name=nil;return self.$const_set(name.$sub("-","_"),encoding)},TMP_2.$$s=self,TMP_2),$a).call($c)});Opal.defs(self,"$find",function(name){try{var $a,$b,TMP_3,self=this,upcase_name=nil;upcase_name=name.$upcase();if(($a=self["$==="](upcase_name))!==nil&&(!$a.$$is_boolean||$a==true)){return upcase_name}($a=($b=self.$constants()).$each,$a.$$p=(TMP_3=function(const$){var self=TMP_3.$$s||this,$a,$b,encoding=nil;if(const$==null)const$=nil;encoding=self.$const_get(const$);if(($a=($b=encoding.$name()["$=="](upcase_name))!==false&&$b!==nil?$b:encoding.$names()["$include?"](upcase_name))!==nil&&(!$a.$$is_boolean||$a==true)){Opal.ret(encoding)}else{return nil}},TMP_3.$$s=self,TMP_3),$a).call($b);return self.$raise($scope.get("ArgumentError"),"unknown encoding name - "+name)}catch($returner){if($returner===Opal.returner){return $returner.$v}throw $returner}});(function(self){var $scope=self.$$scope,def=self.$$proto;return self.$attr_accessor("default_external")})(self.$singleton_class());self.$attr_reader("name","names");def.$initialize=function(name,names,ascii,dummy){var self=this;self.name=name;self.names=names;self.ascii=ascii;return self.dummy=dummy};def["$ascii_compatible?"]=function(){var self=this;return self.ascii};def["$dummy?"]=function(){var self=this;return self.dummy};def.$to_s=function(){var self=this;return self.name};def.$inspect=function(){var $a,self=this;return"#<Encoding:"+self.name+function(){if(($a=self.dummy)!==nil&&(!$a.$$is_boolean||$a==true)){return" (dummy)"}else{return nil}return nil}()+">"};def.$each_byte=function(){var self=this;return self.$raise($scope.get("NotImplementedError"))};def.$getbyte=function(){var self=this;return self.$raise($scope.get("NotImplementedError"))};return(def.$bytesize=function(){var self=this;return self.$raise($scope.get("NotImplementedError"))},nil)&&"bytesize"})(self,null);($a=($b=$scope.get("Encoding")).$register,$a.$$p=(TMP_4=function(){var self=TMP_4.$$s||this,TMP_5;Opal.defn(self,"$each_byte",TMP_5=function(string){var $a,self=this,$iter=TMP_5.$$p,block=$iter||nil;TMP_5.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);if(code<=127){($a=Opal.yield1(block,code))===$breaker?$breaker.$v:$a}else{var encoded=encodeURIComponent(string.charAt(i)).substr(1).split("%");for(var j=0,encoded_length=encoded.length;j<encoded_length;j++){($a=Opal.yield1(block,parseInt(encoded[j],16)))===$breaker?$breaker.$v:$a}}}});return(Opal.defn(self,"$bytesize",function(){var self=this;return self.$bytes().$length()}),nil)&&"bytesize"},TMP_4.$$s=self,TMP_4),$a).call($b,"UTF-8",$hash2(["aliases","ascii"],{aliases:["CP65001"],ascii:true}));($a=($c=$scope.get("Encoding")).$register,$a.$$p=(TMP_6=function(){var self=TMP_6.$$s||this,TMP_7;Opal.defn(self,"$each_byte",TMP_7=function(string){var $a,self=this,$iter=TMP_7.$$p,block=$iter||nil;TMP_7.$$p=null;for(var i=0,length=string.length;i<length;i++){var code=string.charCodeAt(i);($a=Opal.yield1(block,code&255))===$breaker?$breaker.$v:$a;($a=Opal.yield1(block,code>>8))===$breaker?$breaker.$v:$a}});return(Opal.defn(self,"$bytesize",function(){var self=this;return self.$bytes().$length()}),nil)&&"bytesize"},TMP_6.$$s=self,TMP_6),$a).call($c,"UTF-16LE");($a=($d=$scope.get("Encoding")).$register,$a.$$p=(TMP_8=function(){var self=TMP_8.$$s||this,TMP_9;Opal.defn(self,"$each_byte",TMP_9=function(string){var $a,self=this,$iter=TMP_9.$$p,block=$iter||nil;TMP_9.$$p=null;for(var i=0,length=string.length;i<length;i++){($a=Opal.yield1(block,string.charCodeAt(i)&255))===$breaker?$breaker.$v:$a}});return(Opal.defn(self,"$bytesize",function(){var self=this;return self.$bytes().$length();

}),nil)&&"bytesize"},TMP_8.$$s=self,TMP_8),$a).call($d,"ASCII-8BIT",$hash2(["aliases","ascii"],{aliases:["BINARY"],ascii:true}));return function($base,$super){function $String(){}var self=$String=$klass($base,$super,"String",$String);var def=self.$$proto,$scope=self.$$scope,TMP_10;def.encoding=nil;def.encoding=$scope.get("Encoding").$$scope.get("UTF_16LE");def.$bytes=function(){var self=this;return self.$each_byte().$to_a()};def.$bytesize=function(){var self=this;return self.encoding.$bytesize(self)};def.$each_byte=TMP_10=function(){var $a,$b,self=this,$iter=TMP_10.$$p,block=$iter||nil;TMP_10.$$p=null;if(block!==nil){}else{return self.$enum_for("each_byte")}($a=($b=self.encoding).$each_byte,$a.$$p=block.$to_proc(),$a).call($b,self);return self};def.$encoding=function(){var self=this;return self.encoding};def.$force_encoding=function(encoding){var self=this;encoding=$scope.get("Encoding").$find(encoding);if(encoding["$=="](self.encoding)){return self}var result=new String(self);result.encoding=encoding;return result};return(def.$getbyte=function(idx){var self=this;return self.encoding.$getbyte(self,idx)},nil)&&"getbyte"}(self,null)})(Opal);