/* Generated by Opal 0.5.5 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $klass = $opal.klass, $module = $opal.module;
  $opal.add_stubs(['$==', '$raise', '$attr_reader', '$path', '$start_with?', '$absolute?']);
  (function($base, $super) {
    function $Pathname(){};
    var self = $Pathname = $klass($base, $super, 'Pathname', $Pathname);

    var def = $Pathname._proto, $scope = $Pathname._scope;
    def.path = nil;
    def.$initialize = function(path) {
      var self = this;
      if (path['$==']("0")) {
        self.$raise($scope.ArgumentError)};
      return self.path = path;
    };

    self.$attr_reader("path");

    def['$=='] = function(other) {
      var self = this;
      return other.$path()['$=='](self.path);
    };

    def['$absolute?'] = function() {
      var self = this;
      return self.path['$start_with?']("/");
    };

    def['$relative?'] = function() {
      var $a, self = this;
      return ($a = self['$absolute?'](), ($a === nil || $a === false));
    };

    def.$to_path = function() {
      var self = this;
      return self.path;
    };

    $opal.defn(self, '$to_str', def.$to_path);

    return $opal.defn(self, '$to_s', def.$to_path);
  })(self, null);
  return (function($base) {
    var self = $module($base, 'Kernel');

    var def = self._proto, $scope = self._scope;
    def.$Pathname = function(path) {
      var self = this;
      return nil;
    }
        ;$opal.donate(self, ["$Pathname"]);
  })(self);
})(Opal);

//@ sourceMappingURL=/__opal_source_maps__/pathname.js.map
;
